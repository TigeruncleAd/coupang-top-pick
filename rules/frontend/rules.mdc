---
description: rule for frontend
alwaysApply: false
---

## 컴포넌트 작성 규칙

### 컴포넌트 분리

- 하나의 컴포넌트는 하나의 책임만 가져야 합니다
- 복잡한 로직과 UI를 분리하여 관리합니다
- 페이지 컴포넌트와 재사용 가능한 컴포넌트를 분리합니다
- 모달, 폼 등 복잡한 UI는 별도의 컴포넌트로 분리합니다

### 서버/클라이언트 컴포넌트

- 기본적으로 서버 컴포넌트를 사용합니다
- 클라이언트 상호작용이 필요한 경우에만 'use client' 지시어를 사용합니다
- Data fetching은 가능한 서버 컴포넌트에서 수행합니다
- CSR의 경우 tanstack query를 사용하며, 가능한 api가 아닌 server action을 연동합니다.
- 서버 액션을 활용하여 API 호출과 환경변수 접근을 관리합니다
- useMutation 혹은 useFormAction 을 server action과 연동하여 서버 동작을 호출합니다.

### 폼 관리

- zod를 사용하여 폼을 관리합니다
- 스키마 기반 검증으로 타입 안정성을 확보합니다
- 중앙화된 검증 로직으로 일관성을 유지합니다
- 동적 필드 처리와 에러 핸들링을 효율적으로 관리합니다

### 커스텀 훅

- 재사용 가능한 로직은 커스텀 훅으로 분리합니다
- 상태 관리, Data fetching 등 공통 로직을 추상화합니다
- 관심사를 분리하여 컴포넌트의 가독성을 향상시킵니다

## 기타

- Move the object outside the component
- useCallback과 useMemo를 적절히 사용합니다
- toast 는 sonner 라이브러리 활용
