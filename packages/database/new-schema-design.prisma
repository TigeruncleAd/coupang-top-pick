// 새로운 정규화된 스키마 설계

// 1. 상품 기본 정보 (공통) - MarketProduct로 명명
model MarketProduct {
  id          BigInt   @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 기본 상품 정보
  name        String
  url         String   @unique
  market      String   // 'naver' | 'coupang'
  storeName   String
  productImage String?
  
  // 상품 상세 정보
  price       Int?
  originalPrice Int?
  discountRate Float?
  rating      Float?
  reviewCount Int?
  
  // 상태 정보
  isActive    Boolean  @default(true)
  
  // 히스토리 데이터 (JSON)
  historyData Json?
  
  // 상품 메타데이터 (JSON)
  metadata    Json?
  
  // 관계
  groupId     BigInt?
  group       ProductGroup? @relation(fields: [groupId], references: [id])
  
  // 추적 데이터
  rankings    ProductRanking[]
  changes     ProductChange[]
  
  // 사용자별 추적 상품 관계
  userTrackedProducts UserTrackedProduct[]
  
  // 경쟁 상품 관계
  asMainProduct      UserCompetitor[] @relation("MainProduct")
  asCompetitorProduct UserCompetitor[] @relation("CompetitorProduct")
  
  @@index([market])
  @@index([isActive])
  @@index([groupId])
}

// 2. 사용자별 추적 상품 (사용자-상품 관계)
model UserTrackedProduct {
  id          BigInt   @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 관계
  userId      BigInt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  productId   BigInt
  product     MarketProduct  @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  // 사용자별 설정
  isActive    Boolean  @default(true)
  customName  String?  // 사용자가 설정한 별칭
  
  // 경쟁 상품 관계
  competitors UserCompetitor[] @relation("MainProduct")
  
  // 추적 키워드 관계
  keywords    TrackedKeyword[]
  
  @@unique([userId, productId])
  @@index([userId])
  @@index([productId])
}

// 3. 사용자별 경쟁 상품 관계
model UserCompetitor {
  id          BigInt   @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // 관계
  userId      BigInt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  mainProductId     BigInt
  mainProduct       UserTrackedProduct @relation("MainProduct", fields: [mainProductId], references: [id], onDelete: Cascade)
  
  competitorProductId BigInt
  competitorProduct   MarketProduct @relation("CompetitorProduct", fields: [competitorProductId], references: [id], onDelete: Cascade)
  
  // 경쟁 상품 추적 데이터
  trackingData Json?  // 순위, 검색량 등 추적 데이터
  
  @@unique([userId, mainProductId, competitorProductId])
  @@index([userId])
  @@index([mainProductId])
  @@index([competitorProductId])
}

// 4. 사용자별 추적 키워드 (UserTrackedProduct와 연결)
model TrackedKeyword {
  id          BigInt   @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  keyword     String
  market      String   // 'naver' | 'coupang'
  isActive    Boolean  @default(true)
  
  // 관계 (UserTrackedProduct와 연결)
  userTrackedProductId BigInt
  userTrackedProduct   UserTrackedProduct @relation(fields: [userTrackedProductId], references: [id], onDelete: Cascade)
  
  // 추적 데이터
  rankings    ProductRanking[]
  
  @@unique([userTrackedProductId, keyword])
  @@index([userTrackedProductId])
  @@index([market])
}

// 5. User 모델에 관계 추가
model User {
  // ... 기존 필드들 ...
  
  // 새로운 관계들
  userTrackedProducts UserTrackedProduct[]
  userCompetitors     UserCompetitor[]
}
